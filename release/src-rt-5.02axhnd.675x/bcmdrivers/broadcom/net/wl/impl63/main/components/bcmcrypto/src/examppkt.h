#ifdef BCMCCX

/*
 * examppkt.h
 * CCX test packets
 *
 * From:
 *	IEEE 802.11 Wireless LAN Client
 *	Cisco Systems Compliance Specifications
 *	[Cisco Client eXtensions (CCX)]
 *	Version 1.11
 *	Cisco Proprietary and Confidential
 *
 * Copyright 2020 Broadcom
 *
 * This program is the proprietary software of Broadcom and/or
 * its licensors, and may only be used, duplicated, modified or distributed
 * pursuant to the terms and conditions of a separate, written license
 * agreement executed between you and Broadcom (an "Authorized License").
 * Except as set forth in an Authorized License, Broadcom grants no license
 * (express or implied), right to use, or waiver of any kind with respect to
 * the Software, and Broadcom expressly reserves all rights in and to the
 * Software and all intellectual property rights therein.  IF YOU HAVE NO
 * AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY
 * WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF
 * THE SOFTWARE.
 *
 * Except as expressly set forth in the Authorized License,
 *
 * 1. This program, including its structure, sequence and organization,
 * constitutes the valuable trade secrets of Broadcom, and you shall use
 * all reasonable efforts to protect the confidentiality thereof, and to
 * use this information only in connection with your use of Broadcom
 * integrated circuit products.
 *
 * 2. TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
 * "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
 * REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR
 * OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
 * DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
 * NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
 * ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
 * CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
 * OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 *
 * 3. TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 * BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL,
 * SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR
 * IN ANY WAY RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN
 * IF BROADCOM HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii)
 * ANY AMOUNT IN EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF
 * OR U.S. $1, WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY
 * NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
 *
 * <<Broadcom-WL-IPTag/Proprietary:>>
 *
 * $Id: examppkt.h 679390 2017-01-14 00:13:47Z $
 */

/*
 * Sample 802.11 packets, CKIP permuted and MIC encapsulated
 * In the following examples:
 * The client has a session key of 19:59:8D:F5:EF.
 * The multicast/broadcast key is 12:34:56:78:90.
 * The example packets show pings of various lengths preceeded
 * by an ARP exchange.
 * Note that the AP rebroadcast of the ARP (packet_data_01)
 * uses the MC/BC key.
 */

uint8 packet_data_00[] = {
	0x08, 0x41, 0x02, 0x01, 0x00, 0x40, 0x96, 0x21,
	0xDC, 0x83, 0x00, 0x40, 0x96, 0x28, 0x8D, 0xDC,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA0, 0x38,
	0x00, 0x01, 0x15, 0x00, 0xEB, 0xB1, 0xC7, 0x6A,
	0xB1, 0x96, 0xB2, 0x16, 0x58, 0xC4, 0x04, 0x5E,
	0x2D, 0x6A, 0xF3, 0x4B, 0x92, 0xEB, 0xFC, 0xFC,
	0xED, 0x70, 0x98, 0xD0, 0x64, 0x6C, 0x5E, 0xBB,
	0x1A, 0xDD, 0xD4, 0x2A, 0x26, 0x2A, 0x8B, 0xEF,
	0xC2, 0x41, 0x67, 0x75, 0x9D, 0xFB, 0xFE, 0x5D,
	0x4E, 0xCA, 0xA0, 0x45, 0x6D, 0x7C, 0x36, 0x22,
	0x22, 0x7D, 0xD0, 0xBD, 0x09, 0x16, 0x1D, 0xE6,
	0x41, 0xD9, 0x94, 0xBE, 0x9B, 0x53, 0xC5, 0xCB
};
uint8 packet_key_00[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_01[] = {
	0x08, 0x42, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0x00, 0x40, 0x96, 0x21, 0xDC, 0x83,
	0x00, 0x40, 0x96, 0x28, 0x8D, 0xDC, 0x60, 0x2C,
	0x00, 0x00, 0x62, 0x00, 0x46, 0x65, 0xA8, 0x0F,
	0x86, 0x59, 0xF8, 0x57, 0x8E, 0x51, 0xD5, 0xA5,
	0xD6, 0xFE, 0xD1, 0x40, 0x2A, 0x0E, 0x28, 0xE1,
	0xDA, 0xAE, 0x2C, 0x90, 0x45, 0x05, 0x7B, 0xF1,
	0x00, 0xFD, 0xAD, 0xED, 0x8F, 0x09, 0xF3, 0x86,
	0x81, 0x6B, 0x24, 0xBE, 0x31, 0x36, 0xCA, 0x54,
	0x29, 0x54, 0xAA, 0x61, 0x1C, 0x7D, 0xC9, 0xF4,
	0x89, 0xEA, 0x71, 0xFF, 0x55, 0x03, 0x7F, 0x8A,
	0xCC, 0x48, 0x77, 0x01, 0xCA, 0x0F, 0x89, 0x2C
};
uint8 packet_key_01[] = {
	0x12, 0x34, 0x56, 0x78, 0x90
};

uint8 packet_data_02[] = {
	0x08, 0x42, 0xD5, 0x00, 0x00, 0x40, 0x96, 0x28,
	0x8D, 0xDC, 0x00, 0x40, 0x96, 0x21, 0xDC, 0x83,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0x70, 0x2C,
	0x00, 0x00, 0x63, 0xC0, 0xFF, 0x46, 0x41, 0xBB,
	0x38, 0x5F, 0xC1, 0x06, 0x32, 0x3F, 0x27, 0xB5,
	0x5B, 0x2E, 0x49, 0xEB, 0xB7, 0x11, 0xAC, 0xAA,
	0xB5, 0x50, 0x07, 0x0F, 0x6D, 0x41, 0x86, 0xF3,
	0x06, 0xA8, 0x8F, 0x84, 0xDF, 0x54, 0x72, 0x1F,
	0xD3, 0x21, 0xEF, 0x38, 0x77, 0x72, 0xA9, 0x4B,
	0x70, 0x4F, 0x02, 0x4C, 0x15, 0xD5, 0x89, 0x3A,
	0x45, 0x08, 0xD4, 0xF4, 0x0B, 0xC7, 0xF5, 0xE8,
	0xDE, 0x73, 0xFE, 0x5A, 0xE9, 0x58, 0x93, 0xC0
};
uint8 packet_key_02[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_03[] = {
	0x08, 0x41, 0x02, 0x01, 0x00, 0x40, 0x96, 0x21,
	0xDC, 0x83, 0x00, 0x40, 0x96, 0x28, 0x8D, 0xDC,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0xB0, 0x38,
	0x00, 0x01, 0x16, 0x00, 0x5A, 0x29, 0x07, 0xE8,
	0xB3, 0xEE, 0x6C, 0xBD, 0xCA, 0x57, 0x79, 0x7E,
	0x24, 0x45, 0xC4, 0xE7, 0x0D, 0xD7, 0x82, 0xD0,
	0x8E, 0x24, 0x3D, 0xB9, 0x60, 0xBC, 0xE2, 0x1C,
	0xD4, 0x59, 0x9F, 0xFF, 0xA6, 0xF1, 0x60, 0x62,
	0xF4, 0xB8, 0x22, 0xBB, 0x5D, 0xDA, 0xA0, 0x0B,
	0x7D, 0x7C, 0x28, 0x9F, 0x11, 0x03, 0x8C, 0x2C,
	0xAD, 0x84, 0xBA, 0x31, 0x09, 0xF6, 0xB0, 0xF4,
	0x5A, 0x5C, 0xA4, 0x77, 0x6D, 0xB8, 0x0C, 0x1B,
	0x6A, 0x7A, 0xB4, 0xF8, 0x53, 0xC0, 0x8C, 0x21,
	0x7A, 0xAF, 0x6D, 0xA3, 0x8E, 0x08, 0x1F, 0x7E,
	0x43, 0x15, 0xEB, 0xAC, 0x26, 0x04
};
uint8 packet_key_03[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_04[] = {
	0x08, 0x42, 0xD5, 0x00, 0x00, 0x40, 0x96, 0x28,
	0x8D, 0xDC, 0x00, 0x40, 0x96, 0x21, 0xDC, 0x83,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0x80, 0x2C,
	0x00, 0x00, 0x64, 0xC0, 0x3D, 0xD2, 0x7E, 0xB5,
	0x8B, 0x76, 0x63, 0xBE, 0xAD, 0xAA, 0xBA, 0x8B,
	0xD7, 0x7D, 0x29, 0x63, 0xFC, 0x49, 0x4F, 0x48,
	0xFC, 0x3F, 0x86, 0x75, 0x33, 0x2B, 0x52, 0x6F,
	0x78, 0x81, 0x63, 0x67, 0xBE, 0xFE, 0x89, 0xEE,
	0xD8, 0x16, 0x99, 0xFB, 0xA3, 0x0A, 0x8D, 0x1E,
	0xA0, 0x68, 0xB0, 0xFF, 0x7A, 0xFE, 0x21, 0xD2,
	0x1D, 0x14, 0xCC, 0x24, 0x74, 0xA3, 0xC1, 0x7E,
	0x04, 0xC9, 0xC0, 0xD0, 0xC2, 0x26, 0x25, 0xD8,
	0x5B, 0x2C, 0x6C, 0x42, 0xE3, 0x25, 0x10, 0x35,
	0x85, 0x97, 0x02, 0x10, 0xB6, 0xD2, 0x9B, 0xFC,
	0x6B, 0x0F, 0x95, 0xC7, 0x4C, 0xDB
};
uint8 packet_key_04[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_05[] = {
	0x08, 0x41, 0x02, 0x01, 0x00, 0x40, 0x96, 0x21,
	0xDC, 0x83, 0x00, 0x40, 0x96, 0x28, 0x8D, 0xDC,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0xC0, 0x38,
	0x00, 0x01, 0x17, 0x00, 0xEB, 0x87, 0xDA, 0x4A,
	0x03, 0x77, 0x92, 0xB5, 0xE6, 0xB7, 0x66, 0xF6,
	0x9B, 0x21, 0x22, 0x45, 0x80, 0xED, 0x42, 0xE9,
	0xA0, 0x3E, 0x18, 0x46, 0x1F, 0x1F, 0x4B, 0x32,
	0xD0, 0xE4, 0x60, 0x9E, 0x0F, 0x31, 0x83, 0x0C,
	0x64, 0x13, 0xB1, 0xC3, 0xD8, 0x35, 0xC3, 0x2B,
	0x32, 0x67, 0x24, 0x40, 0xF2, 0x0B, 0x08, 0x8A,
	0x43, 0xE2, 0x93, 0x82, 0x6B, 0xC2, 0x8B, 0x4C,
	0x83, 0xFA, 0x61, 0x4C, 0x1E, 0xD3, 0x7B, 0xF9,
	0x0A, 0x8A, 0x6F, 0xC9, 0xD8, 0xA9, 0xD8, 0x06,
	0x5C, 0x90, 0x18, 0x4A, 0xCC, 0xA9, 0xF9, 0x53,
	0x1A, 0xF7, 0x90, 0x57, 0x8B, 0x84, 0x3A
};
uint8 packet_key_05[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_06[] = {
	0x08, 0x42, 0xD5, 0x00, 0x00, 0x40, 0x96, 0x28,
	0x8D, 0xDC, 0x00, 0x40, 0x96, 0x21, 0xDC, 0x83,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0xF0, 0x2E,
	0x00, 0x00, 0x65, 0xC0, 0x43, 0x8F, 0xAC, 0xC7,
	0xF2, 0x78, 0xAF, 0x25, 0x73, 0x09, 0x6C, 0xDF,
	0xE8, 0x51, 0xD0, 0xD8, 0x64, 0x51, 0x0D, 0xD1,
	0x44, 0x4F, 0xE8, 0x15, 0x1F, 0x87, 0xAE, 0xA2,
	0xFC, 0x2E, 0x45, 0xAB, 0x0F, 0x88, 0x87, 0x6A,
	0xB6, 0xE2, 0xFF, 0xC7, 0x8B, 0x41, 0xC3, 0x80,
	0x9A, 0x61, 0x85, 0x13, 0x3A, 0x99, 0x1E, 0xAF,
	0xFF, 0xDB, 0x96, 0x07, 0x6E, 0xD1, 0x30, 0x70,
	0xE0, 0x10, 0x81, 0xA0, 0x02, 0xA4, 0x16, 0xFC,
	0x46, 0x17, 0xA1, 0xC9, 0xBF, 0x17, 0x4B, 0x5E,
	0x7B, 0x94, 0x6B, 0x09, 0x8F, 0x0B, 0x8A, 0xEE,
	0x56, 0xBF, 0x6C, 0x79, 0xD5, 0xA0, 0x19
};
uint8 packet_key_06[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_07[] = {
	0x08, 0x41, 0x02, 0x01, 0x00, 0x40, 0x96, 0x21,
	0xDC, 0x83, 0x00, 0x40, 0x96, 0x28, 0x8D, 0xDC,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0xD0, 0x38,
	0x00, 0x01, 0x18, 0x00, 0xEB, 0x88, 0xBD, 0xCE,
	0x5D, 0x37, 0xD5, 0xAD, 0x0A, 0x99, 0x49, 0x56,
	0xE2, 0x59, 0x4E, 0xBB, 0x14, 0xC0, 0x15, 0x0E,
	0xC0, 0x48, 0xFD, 0xCC, 0x0F, 0xA8, 0x2A, 0x3D,
	0xF0, 0x3F, 0xBF, 0xAE, 0xCD, 0xB9, 0x53, 0x26,
	0x9B, 0x43, 0x44, 0x76, 0x40, 0xB2, 0xCC, 0xDA,
	0x90, 0x16, 0xD0, 0x1B, 0x65, 0xC2, 0x41, 0x2F,
	0xC0, 0x07, 0x95, 0x41, 0x00, 0x94, 0x32, 0x14,
	0xDD, 0x74, 0xBA, 0xD8, 0xD6, 0xA5, 0x39, 0x0B,
	0xF5, 0x50, 0x0C, 0xA5, 0x95, 0xDB, 0x7C, 0xD3,
	0xAB, 0xF4, 0xF4, 0x36, 0xB7, 0xE9, 0x8C, 0xF5,
	0x0F, 0xFA, 0xF1, 0x6A, 0xB6, 0x62, 0x14, 0x6C
};
uint8 packet_key_07[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_08[] = {
	0x08, 0x42, 0xD5, 0x00, 0x00, 0x40, 0x96, 0x28,
	0x8D, 0xDC, 0x00, 0x40, 0x96, 0x21, 0xDC, 0x83,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0xF0, 0x2F,
	0x00, 0x00, 0x66, 0xC0, 0xC3, 0x05, 0xB8, 0x5F,
	0x71, 0x12, 0x85, 0x8E, 0x89, 0x4D, 0x59, 0xE0,
	0x62, 0x5A, 0xF3, 0x7A, 0x77, 0x3F, 0x11, 0x6E,
	0xC2, 0x9F, 0x66, 0xC3, 0x2B, 0x49, 0x01, 0x22,
	0x7F, 0x61, 0xCF, 0x29, 0x58, 0x22, 0x9D, 0x50,
	0xCC, 0x34, 0xD0, 0x56, 0xB7, 0x0E, 0x98, 0xE4,
	0x4A, 0x47, 0x1D, 0xD6, 0x34, 0x0B, 0xA7, 0x0E,
	0x96, 0x94, 0xF0, 0x39, 0xCF, 0x2E, 0xEF, 0xE3,
	0x63, 0x57, 0xD5, 0x5D, 0xBA, 0xD0, 0x59, 0xDE,
	0x53, 0xC3, 0x9B, 0x8A, 0x5C, 0x6B, 0x1F, 0xA4,
	0x6F, 0x35, 0xA0, 0x2C, 0x61, 0x7A, 0x1D, 0xB9,
	0xB4, 0xC2, 0x29, 0x31, 0xF1, 0xBA, 0xC8, 0xBA
};
uint8 packet_key_08[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_09[] = {
	0x08, 0x41, 0x02, 0x01, 0x00, 0x40, 0x96, 0x21,
	0xDC, 0x83, 0x00, 0x40, 0x96, 0x28, 0x8D, 0xDC,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0xE0, 0x38,
	0x00, 0x01, 0x19, 0x00, 0xF6, 0xFF, 0xDA, 0x8C,
	0x66, 0x09, 0x9F, 0xFD, 0x7D, 0x87, 0xD8, 0xAB,
	0x17, 0xD6, 0x30, 0x32, 0xC8, 0xC0, 0x0A, 0x2B,
	0xB5, 0x85, 0xCE, 0x3E, 0xD1, 0xEB, 0xAE, 0xA2,
	0x93, 0x0E, 0x43, 0xD7, 0x28, 0xDB, 0x86, 0x5B,
	0x80, 0x88, 0x36, 0x9F, 0x7C, 0x8D, 0x01, 0x6E,
	0x2A, 0x58, 0x5F, 0xCD, 0xE1, 0x1C, 0xE4, 0xD8,
	0xE8, 0x92, 0x43, 0x22, 0xDE, 0xF6, 0xCA, 0xBA,
	0x48, 0xC6, 0x25, 0x15, 0xCB, 0xC5, 0x2F, 0xFE,
	0x5B, 0x90, 0xC0, 0xDE, 0x54, 0xC4, 0x7D, 0x4D,
	0xDA, 0x34, 0x28, 0xA2, 0xDE, 0x09, 0xAD, 0xF3,
	0xA9, 0xB8, 0x64, 0x2E, 0x8C, 0xC8, 0xCC, 0xA7,
	0xE1
};
uint8 packet_key_09[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_10[] = {
	0x08, 0x42, 0xD5, 0x00, 0x00, 0x40, 0x96, 0x28,
	0x8D, 0xDC, 0x00, 0x40, 0x96, 0x21, 0xDC, 0x83,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0xC0, 0x30,
	0x00, 0x00, 0x67, 0xC0, 0x65, 0x8D, 0x3A, 0x72,
	0x0D, 0x34, 0x3B, 0x88, 0x5E, 0xC7, 0x37, 0x64,
	0x69, 0x77, 0xC4, 0x07, 0xB3, 0xB1, 0xA5, 0x40,
	0x56, 0xDE, 0x8E, 0xE8, 0xAE, 0x5B, 0x5C, 0x1C,
	0xD7, 0x39, 0x31, 0x17, 0x27, 0x7E, 0x3D, 0x0C,
	0x41, 0x8E, 0x2E, 0x88, 0xEF, 0x45, 0x5E, 0xC1,
	0x19, 0x64, 0xD5, 0xB3, 0xC4, 0x71, 0xC1, 0x1F,
	0x9B, 0x05, 0x68, 0xD9, 0x4B, 0x4F, 0xB5, 0xD3,
	0x4A, 0xA0, 0xD6, 0x69, 0xA7, 0xF3, 0xE4, 0xE2,
	0x83, 0xFC, 0xEA, 0x0A, 0x60, 0x3B, 0xD0, 0x3E,
	0xA5, 0x62, 0xD2, 0x6D, 0xDB, 0xB1, 0xF3, 0x66,
	0xA3, 0x24, 0xE7, 0x7D, 0x5D, 0xDF, 0x72, 0x7C,
	0x33
};
uint8 packet_key_10[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_11[] = {
	0x08, 0x41, 0x02, 0x01, 0x00, 0x40, 0x96, 0x21,
	0xDC, 0x83, 0x00, 0x40, 0x96, 0x28, 0x8D, 0xDC,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0xF0, 0x38,
	0x00, 0x01, 0x1A, 0x00, 0x22, 0x76, 0xC2, 0x12,
	0x82, 0x07, 0xBF, 0x14, 0xA2, 0xE8, 0x38, 0xF4,
	0xF4, 0x8A, 0x96, 0xE8, 0x46, 0xDF, 0x7E, 0xB8,
	0x44, 0x67, 0x51, 0x50, 0x27, 0xD1, 0xEE, 0x30,
	0xD4, 0x97, 0x06, 0xC3, 0x29, 0xB9, 0xB1, 0x0A,
	0x7F, 0x3B, 0x20, 0x73, 0xA0, 0x4F, 0xD9, 0x44,
	0x0A, 0x2C, 0x61, 0xC5, 0x48, 0x25, 0x34, 0x54,
	0xEC, 0x8F, 0xCE, 0xD8, 0x5C, 0x77, 0x3D, 0x71,
	0x13, 0x0D, 0x07, 0x52, 0x44, 0x75, 0x18, 0xF5,
	0xF4, 0x5C, 0xED, 0x2D, 0x5C, 0x19, 0x9F, 0xC8,
	0x01, 0x26, 0x80, 0x8D, 0x54, 0x72, 0x1F, 0xCF,
	0xCE, 0xF0, 0xBB, 0x73, 0x34, 0xD2, 0x36, 0x3B,
	0x51, 0xCD, 0x56, 0xC7, 0x57, 0x39, 0x2D, 0x83,
	0xD1, 0xF8, 0xEF, 0x78, 0x8C, 0xBD, 0xC4, 0x50,
	0x82, 0x35, 0x9B, 0xB4, 0x17, 0x05, 0x4E, 0x4F,
	0xA7, 0x4E, 0x78, 0x5F, 0x1C, 0xC8, 0xCF, 0x75,
	0x95, 0x66, 0xFB, 0x20, 0x21, 0xB9, 0x96, 0x60,
	0xEC, 0x47, 0x94, 0x64, 0xC5, 0x17, 0xFD, 0xE2,
	0x06, 0xE5, 0xAF, 0x2D, 0x25, 0xAA, 0x18, 0x76,
	0x80, 0xE2, 0x7F, 0x00, 0x7C, 0xCD, 0x42, 0xCA,
	0x68, 0x58, 0x4E, 0x74, 0x92, 0x9F, 0x20, 0x2E,
	0x24, 0x8F, 0x27, 0xCB, 0x2C, 0x6D, 0x2F, 0x68,
	0xC1, 0xF8, 0x85, 0x53, 0x2A, 0xC3, 0xE7, 0xEC,
	0xE2, 0x58, 0x0B, 0xA4, 0xE2, 0x1B, 0xDA, 0x34,
	0x34, 0x30, 0x48, 0xFC, 0x6C, 0x5F, 0x78, 0x5C,
	0x39, 0x7C, 0xB9, 0x71, 0xE2, 0xE1, 0x3A, 0x7D,
	0x84, 0x88, 0xA9, 0x7E, 0xFB, 0x43, 0x79, 0x8D,
	0xB3, 0xFB, 0xC0, 0x8A, 0x65, 0x6D, 0xC8, 0xF9,
	0xF1, 0xC0, 0xB2, 0x81, 0xB3, 0xC8, 0xE8, 0x97,
	0x7A, 0x1A, 0x25, 0x9D, 0x7C, 0x8D, 0x29, 0x9F,
	0x88, 0xE2, 0x27, 0x18, 0x1B, 0x60, 0x59, 0xA2,
	0xC1, 0x2D, 0xEB, 0x89, 0xC6, 0x39, 0xCB, 0xA6,
	0x08, 0x05, 0x78, 0xD7, 0x8D, 0xA1, 0x0F, 0xBD,
	0xE7, 0xB8, 0xF0, 0x40, 0xE0, 0x91, 0xAC, 0x17,
	0x1C, 0x10, 0x1C, 0x01, 0x78, 0x68, 0x0E, 0x6D,
	0x14, 0xE0, 0x35, 0xC4, 0x00, 0x59, 0xB3, 0x94,
	0x4E, 0x6D, 0x52, 0xC6, 0xAA, 0xC3, 0x9A, 0xAA,
	0x24, 0xA3, 0x1B, 0x7C, 0x17, 0x91, 0x9E, 0x97,
	0x64, 0x94, 0xFB, 0xBC, 0x2E, 0x68, 0x1A, 0xE4,
	0x07, 0xC3, 0xD0, 0x11, 0xEB, 0x6C, 0xA6, 0x54,
	0x1B, 0x4B, 0x1D, 0x08, 0x5B, 0x1F, 0xC1, 0xDB,
	0xF8, 0xD6, 0x8F, 0xA3, 0xEE, 0xB4, 0xE4, 0x7F,
	0x64, 0xD8, 0x23, 0x4B, 0x24, 0xDF, 0xCB, 0x9B,
	0x68, 0xBD, 0x3C, 0xF9, 0xAF, 0xAA, 0xB5, 0x06,
	0x42, 0x63, 0x60, 0x23, 0x01, 0x67, 0x0A, 0x2A,
	0x3B, 0x4A, 0xA1, 0x54, 0xBE, 0xAE, 0xAD, 0x60,
	0x5B, 0xBD, 0x54, 0x8E, 0x70, 0x37, 0x2B, 0xF6,
	0xAD, 0xFB, 0x49, 0x99, 0x0B, 0x12, 0x0F, 0xC1,
	0xB2, 0xF9, 0x2E, 0xC8, 0xCB, 0xC4, 0x1E, 0xE8,
	0x45, 0x08, 0x50, 0x62, 0x61, 0x3A, 0xBE, 0x7F,
	0x2F, 0xCE, 0x49, 0xBA, 0x00, 0xB9, 0xA4, 0x26,
	0x85, 0xB3, 0x4D, 0xF9, 0x69, 0x05, 0x42, 0xF5,
	0x76, 0x4D, 0x63, 0xFD, 0x1E, 0xBA, 0x03, 0xA8,
	0x7C, 0x01, 0x86, 0xDE, 0xF6, 0xEF, 0xD3, 0xE9,
	0x5F, 0x35, 0x1F, 0x77, 0x48, 0x82, 0x8E, 0xDF,
	0xB9, 0x62, 0x51, 0xBC, 0xD0, 0x05, 0xDF, 0x80,
	0x43, 0x8F, 0xE0, 0xC8, 0xD0, 0x4A, 0x30, 0x41,
	0x5C, 0x27, 0x28, 0xA4, 0x20, 0x6B, 0x9B, 0x6B,
	0x30, 0xAA, 0x68, 0x06, 0xA8, 0xE2, 0xB3, 0x56,
	0x4A, 0x9C, 0xAA, 0xB7, 0xE3, 0xCD, 0xE0, 0x94,
	0xF9, 0x26, 0x20, 0xE7, 0x6E, 0xF2, 0x21, 0x9A,
	0xAE, 0xBD, 0xC8, 0xB1, 0x23, 0x3B, 0xEA, 0xAC,
	0x68, 0xF9, 0x63, 0x83, 0x11, 0xE6, 0x4B, 0x21,
	0x4A, 0x05, 0x3B, 0x15, 0xF0, 0xAB, 0xA4, 0xD6,
	0x94, 0x46, 0x65, 0xE9, 0x23, 0x14, 0x6E, 0xC4,
	0x2C, 0xE0, 0x58, 0x0F, 0x54, 0xC5, 0x57, 0xBF,
	0x66, 0x10, 0xAA, 0x1B, 0x83, 0xF6, 0x51, 0xE4,
	0xE2, 0x7D, 0xD5, 0x55, 0xC4, 0xF3, 0xF0, 0xE3,
	0x57, 0x27, 0x36, 0xFD, 0xC0, 0xB9, 0x36, 0xF5,
	0xA9, 0x38, 0x0B, 0xCB, 0x98, 0xD1, 0x70, 0x38,
	0x4C, 0xC0, 0xBF, 0xFB, 0x17, 0xE0, 0x94, 0x74,
	0xAE, 0xB5, 0xF9, 0x60, 0x24, 0xD7, 0x4B, 0xBF,
	0x30, 0xF1, 0xAA, 0xBC, 0xC9, 0x03, 0x46, 0xB9,
	0xC1, 0xF0, 0x1E, 0x4A, 0x4C, 0x91, 0x5D, 0x9F,
	0xC9, 0x6F, 0x94, 0x6D, 0xFC, 0x63, 0xEC, 0xA9,
	0x3B, 0x1B, 0xD5, 0x62, 0x6F, 0xC1, 0x59, 0x68,
	0x22, 0x35, 0x67, 0x57, 0xBF, 0x9D, 0xC3, 0x9D,
	0x44, 0x60, 0x4E, 0xEA, 0x52, 0xDE, 0x38, 0xFD,
	0xEB, 0x94, 0x3C, 0xD5, 0x6A, 0x63, 0x20, 0x8E,
	0x90, 0xC1, 0x89, 0x63, 0xCF, 0x47, 0x5F, 0x5A,
	0xC0, 0xA9, 0x98, 0xE0, 0x6C, 0x87, 0x91, 0xA8,
	0x88, 0x38, 0x56, 0x03, 0x36, 0x31, 0x82, 0x92,
	0x0F, 0x94, 0xEC, 0x95, 0xA0, 0x0F, 0x50, 0xF3,
	0x40, 0xE0, 0xA7, 0x42, 0xCA, 0x4D, 0xB7, 0x1B,
	0xAE, 0xB4, 0xE9, 0x90, 0xA6, 0x47, 0xBF, 0x28,
	0x09, 0x06, 0xF0, 0xC6, 0x93, 0xD0, 0xA2, 0xB9,
	0x26, 0x8C, 0x11, 0xDB, 0xF8, 0x8C, 0x6A, 0xBD,
	0xD6, 0xA4, 0xE2, 0x61, 0x5C, 0x01, 0xCB, 0x72,
	0x1C, 0x8A, 0x58, 0xFB, 0x1D, 0xC3, 0xF0, 0x15,
	0x5B, 0x3D, 0x82, 0xCE, 0xDB, 0x34, 0x00, 0x7B,
	0x65, 0x72, 0xAB, 0x04, 0xD6, 0xB8, 0x90, 0xCC,
	0x64, 0xCC, 0x28, 0x66, 0xD8, 0x98, 0x96, 0x39,
	0x85, 0x24, 0x43, 0xD1, 0x98, 0x2A, 0x4F, 0xC2,
	0xFB, 0xCB, 0x09, 0x81, 0x6F, 0x9E, 0x8D, 0x53,
	0xD4, 0x03, 0xE6, 0xBF, 0x2A
};
uint8 packet_key_11[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

uint8 packet_data_12[] = {
	0x08, 0x42, 0xD5, 0x00, 0x00, 0x40, 0x96, 0x28,
	0x8D, 0xDC, 0x00, 0x40, 0x96, 0x21, 0xDC, 0x83,
	0x00, 0x40, 0x96, 0x12, 0xCE, 0x40, 0xA0, 0x31,
	0x00, 0x00, 0x68, 0xC0, 0x2C, 0x57, 0xA9, 0x0D,
	0x2B, 0xFD, 0x8B, 0x58, 0x08, 0x91, 0xFB, 0xA0,
	0x74, 0xE7, 0x72, 0x32, 0xCE, 0x1C, 0xDD, 0xAF,
	0x3E, 0x65, 0x6A, 0x89, 0xB7, 0x85, 0xA2, 0x48,
	0xAD, 0xA3, 0xAD, 0x93, 0x90, 0x5B, 0x2E, 0x58,
	0x20, 0x55, 0x36, 0x6E, 0x33, 0xD1, 0xEA, 0x64,
	0xB4, 0x73, 0xAD, 0xEB, 0x0B, 0x8C, 0x03, 0x28,
	0xA6, 0x04, 0x7A, 0x11, 0x67, 0x55, 0xA9, 0xE2,
	0x80, 0xCF, 0xDF, 0x83, 0x21, 0x95, 0xD3, 0x19,
	0xB8, 0x05, 0x18, 0x1E, 0x63, 0xF3, 0x4A, 0x72,
	0x7B, 0x8F, 0x23, 0xD2, 0x75, 0x6A, 0xC1, 0x3D,
	0xCE, 0x4F, 0x50, 0x55, 0x72, 0x95, 0xB2, 0xE0,
	0xD9, 0x63, 0xF8, 0x6B, 0x65, 0x01, 0x1A, 0xBF,
	0x76, 0xAD, 0x51, 0xFE, 0x81, 0x0A, 0x52, 0xE1,
	0x29, 0x3B, 0x6A, 0xF8, 0xFC, 0x8A, 0x07, 0xCE,
	0x2B, 0x0D, 0x91, 0x4D, 0x59, 0x36, 0x38, 0x4C,
	0x31, 0x04, 0x8F, 0x9C, 0xE0, 0xCA, 0xE5, 0x80,
	0x9E, 0xE0, 0x37, 0x4E, 0xA2, 0xFE, 0x3D, 0x56,
	0x74, 0xBB, 0xD7, 0x98, 0x17, 0x0C, 0x9C, 0xEC,
	0x83, 0x6A, 0x90, 0xAC, 0x0C, 0x60, 0x82, 0x4B,
	0x3C, 0x0A, 0xB0, 0x6B, 0xF4, 0xF6, 0x18, 0x88,
	0xE0, 0xD5, 0x74, 0xA1, 0xE4, 0x5B, 0xEB, 0xDE,
	0xE3, 0x9A, 0x40, 0x62, 0x69, 0x58, 0xA6, 0x9E,
	0xF3, 0x69, 0xA5, 0x7A, 0xEF, 0x27, 0x2C, 0x7A,
	0xA4, 0xA2, 0x23, 0xFD, 0x0C, 0xDC, 0x7B, 0x16,
	0x8C, 0x0D, 0x5A, 0xCC, 0x3B, 0x34, 0xEB, 0xC0,
	0x1C, 0xB8, 0x9C, 0x2D, 0x38, 0x1E, 0xDF, 0xED,
	0x48, 0x11, 0xA2, 0x83, 0x6D, 0xA9, 0xD0, 0xB4,
	0x89, 0x85, 0x58, 0xB8, 0xEA, 0x58, 0x62, 0xEF,
	0x0A, 0x45, 0x1E, 0xC8, 0x43, 0x59, 0x63, 0x56,
	0x6C, 0xEF, 0x01, 0x40, 0x13, 0xF2, 0xA0, 0xA3,
	0x0B, 0xA6, 0xC2, 0x25, 0xF1, 0x96, 0xFD, 0xC3,
	0x2F, 0x5F, 0x2E, 0x82, 0x13, 0x89, 0xFD, 0x4C,
	0xE0, 0x88, 0x4A, 0x8D, 0xBB, 0x11, 0xC8, 0x48,
	0x0C, 0x11, 0xD4, 0xA8, 0x83, 0x3E, 0x77, 0x59,
	0x26, 0x44, 0x72, 0x66, 0xB6, 0xCD, 0x6A, 0xD7,
	0x3B, 0x37, 0xF6, 0x69, 0x20, 0x02, 0xE8, 0xF1,
	0xA6, 0xA0, 0x5A, 0xFA, 0x70, 0x66, 0xB5, 0xCA,
	0x55, 0x2B, 0x40, 0x5A, 0x0E, 0xFE, 0x10, 0x28,
	0x47, 0xB5, 0xA6, 0xA1, 0x3E, 0x6B, 0x23, 0x1B,
	0x59, 0x99, 0x4E, 0x0C, 0xE0, 0xB0, 0x0E, 0xA9,
	0x2C, 0x5C, 0x40, 0x7E, 0x56, 0xF4, 0xD3, 0x2B,
	0x63, 0xC2, 0x4C, 0xF9, 0x81, 0x22, 0x13, 0x65,
	0xC9, 0xF1, 0x64, 0xFC, 0x98, 0xF5, 0xAC, 0x5E,
	0x0B, 0xCE, 0xCA, 0x31, 0x22, 0x2E, 0x50, 0xD8,
	0x6C, 0x4C, 0xDF, 0xF4, 0x82, 0x9F, 0xFF, 0x2E,
	0x3F, 0x76, 0xE5, 0x33, 0x88, 0x85, 0xE9, 0x3F,
	0x9D, 0x75, 0x09, 0x0A, 0xC9, 0x54, 0x2F, 0x7B,
	0x0A, 0xA3, 0x55, 0xDC, 0xB1, 0x24, 0x5F, 0xDD,
	0xC6, 0xBC, 0xAC, 0xBA, 0x3B, 0x38, 0x34, 0xE0,
	0x57, 0xA2, 0x25, 0xAA, 0xBD, 0x4D, 0x63, 0xC4,
	0x65, 0x93, 0x60, 0x9D, 0x99, 0xCC, 0x28, 0xD4,
	0xB2, 0xE1, 0xDF, 0x00, 0x7D, 0x23, 0x61, 0xDA,
	0xE6, 0x6A, 0xEE, 0x6B, 0x7E, 0x6C, 0x06, 0xBB,
	0xFE, 0x41, 0x6F, 0xDC, 0x22, 0xF0, 0x83, 0xCA,
	0x34, 0xEF, 0x2B, 0x05, 0xDA, 0xFF, 0xA6, 0xD5,
	0xC8, 0xBC, 0x6D, 0x54, 0x76, 0xA2, 0x29, 0x92,
	0xFB, 0x67, 0x39, 0x2A, 0xDF, 0x81, 0x5C, 0x13,
	0x4D, 0x7D, 0x89, 0xED, 0xEF, 0x27, 0xF1, 0xC7,
	0x97, 0x07, 0x6F, 0x34, 0xCE, 0xD3, 0xAF, 0x88,
	0x29, 0x7D, 0xFE, 0x08, 0xEE, 0xD0, 0xD5, 0x87,
	0x51, 0x92, 0x17, 0x28, 0x8A, 0x72, 0x24, 0xA6,
	0x75, 0x68, 0xAC, 0xC8, 0xA0, 0xB9, 0x3A, 0x38,
	0xBB, 0xDB, 0xD3, 0x83, 0x2C, 0x95, 0x24, 0x6C,
	0x5E, 0x31, 0x28, 0xB4, 0xDA, 0x08, 0x38, 0x66,
	0x25, 0xE7, 0x77, 0x18, 0x88, 0xA7, 0x53, 0x07,
	0xF6, 0x70, 0x77, 0x71, 0xD0, 0x95, 0x0A, 0xEA,
	0x74, 0x00, 0x0F, 0x13, 0xD0, 0x06, 0x9C, 0x40,
	0x68, 0x0C, 0xC3, 0xBF, 0xAA, 0xC7, 0xDF, 0x35,
	0x7C, 0xB7, 0x05, 0x4D, 0x8B, 0x20, 0x9A, 0x5B,
	0x4E, 0x62, 0x71, 0xC3, 0x34, 0x49, 0x56, 0xBB,
	0x57, 0x26, 0xB3, 0x3C, 0xA0, 0x95, 0x9B, 0xC0,
	0x32, 0x62, 0x62, 0x5B, 0x22, 0xB9, 0xED, 0x8C,
	0x93, 0x2E, 0xA3, 0x0B, 0x24, 0xE6, 0xBF, 0x80,
	0xA6, 0x32, 0x7F, 0x1A, 0x3A, 0x8D, 0xA8, 0x2A,
	0x75, 0xF2, 0xB4, 0x19, 0x3E, 0x68, 0x73, 0x72,
	0x4B, 0x20, 0x3A, 0xC1, 0x6D, 0x6F, 0xB5, 0x17,
	0x42, 0xFF, 0x1E, 0xB1, 0xE2, 0x29, 0xE8, 0xF1,
	0xB7, 0xEE, 0x84, 0xCD, 0x74, 0x2E, 0x3E, 0x1B,
	0x81, 0x69, 0xC8, 0x42, 0xF2, 0xC7, 0x1C, 0xD9,
	0x64, 0x0F, 0x8D, 0xA4, 0x2A, 0x98, 0xE9, 0xCE,
	0x06, 0xC2, 0x20, 0xA3, 0xB7, 0x7A, 0x15, 0x9C,
	0xB9, 0x4D, 0x50, 0xF4, 0x25, 0x42, 0xD6, 0xF2,
	0x9F, 0x4A, 0x3B, 0x86, 0xC0, 0x47, 0x75, 0xCA,
	0xEA, 0xEF, 0xA5, 0x66, 0x4B, 0x5E, 0xE2, 0xB4,
	0x71, 0x53, 0x5B, 0xE6, 0xEE, 0x29, 0x0E, 0xE7,
	0x25, 0x41, 0x29, 0x2B, 0xEE, 0xE9, 0x51, 0x96,
	0xBC, 0xF4, 0x60, 0x3C, 0x4F, 0x4B, 0x16, 0x0B,
	0xCE, 0x63, 0x31, 0x80, 0x6F, 0x16, 0x9D, 0x13,
	0x4D, 0xA3, 0x80, 0xD9, 0x5D, 0xD3, 0xC7, 0x1A,
	0xF5, 0x8A, 0xDE, 0xB9, 0x91, 0xD1, 0xE5, 0x75,
	0x04, 0xDE, 0xFB, 0x7E, 0xED, 0x30, 0xA8, 0xC6,
	0x62, 0x61, 0xE3, 0xBB, 0x6D, 0xC6, 0x4A, 0xE8,
	0xEC, 0x06, 0x6F, 0xEE, 0xD4, 0x94, 0x08, 0x90,
	0xA7, 0x47, 0x55, 0xF0, 0xA2
};
uint8 packet_key_12[] = {
	0x19, 0x59, 0x8D, 0xF5, 0xEF
};

typedef struct {
	uint8 *ppkt;
	int pktlen;
	uint8 *pkey;
	int keylen;
} tdsSamplePacket;

#define PKT_ENTRY(x)    \
{ packet_data_##x, sizeof(packet_data_##x), packet_key_##x, sizeof(packet_key_##x) }

tdsSamplePacket aSamplePacket[] = {
	PKT_ENTRY(00),
	PKT_ENTRY(01),
	PKT_ENTRY(02),
	PKT_ENTRY(03),
	PKT_ENTRY(04),
	PKT_ENTRY(05),
	PKT_ENTRY(06),
	PKT_ENTRY(07),
	PKT_ENTRY(08),
	PKT_ENTRY(09),
	PKT_ENTRY(10),
	PKT_ENTRY(11),
	PKT_ENTRY(12)
};

#endif /* BCMCCX */
