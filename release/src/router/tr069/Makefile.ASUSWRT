include ../common.mak
.PHONY: all clean

SRCPATH = ./source
HDRPATH = ./include
INFPATH = ./interface
XMLPATH = $(INFPATH)/xml.asus
SQLPATH = $(INFPATH)/sqlite
WARPATH = ./war
LINUXPATH = $(WARPATH)/linux
LINUXINCLUDE = $(LINUXPATH)/include
SYSDEPSPATH = $(XMLPATH)/sysdeps

BUILDPATH = ./build
OBJPATH = $(BUILDPATH)/obj
BINPATH = $(BUILDPATH)/bin

#CC = gcc
CFLAGS += -Os -Wall $(EXTRACFLAGS) -ffunction-sections -fdata-sections
LDFLAGS = -s $(EXTRALDFLAGS) -ffunction-sections -fdata-sections -Wl,--gc-sections
LDFLAGS += -L$(TOP_PLATFORM)/nvram${BCMEX}${EX7} -lnvram -L$(TOP)/shared -lshared

ifeq ($(HND_ROUTER),y)
CFLAGS += -DPTHREAD_STACK_SIZE_256K -DPTHREAD_EXIT
LDFLAGS += -L$(TOP_PLATFORM)/wlcsm -lwlcsm
else ifeq ($(RTCONFIG_QCA),y)
CFLAGS += -DPTHREAD_STACK_SIZE_256K -DPTHREAD_EXIT
endif

ifeq ($(RTCONFIG_HND_ROUTER_AX),y)
CFLAGS +=-I$(SRCBASE)/../components/wlioctl/include -I$(SRCBASE)/../components/proto/include -I$(SRCBASE)/wl/sys
endif
#------------ Complier Options ------------
#Enable detailed log: CODE_DEBUG
#Enable IPv6: __DEVICE_IPV6__
#Enable WiMAX WIB Bootstrap: TR069_WIB
#Enable Femto PM and CM: TR196
#Enable SSL: __ENABLE_SSL__
#Enable TR-157 diagnostics: TR157
#Enable TR-143 diagnostics: TR143
#Backward Compatibility to v4.2: __V4_2
#Support VT100 ANSI Terminal Color for log: VT100_COMPAT
#Support STUN client: TR111
#Support TR-181 data model: TR181
#Support TR-106 data model: TR106
#Support alias based addressing: ALIAS
#------------------------------------------
#DEFS = -DCODE_DEBUG -DVT100_COMPAT -DUSE_C99 -D__ENABLE_SSL__ -DWITH_STRPTIME -D__DEVICE_IPV6__
#DEFS = -DVT100_COMPAT -DUSE_C99 -DCODE_DEBUG -D__ENABLE_SSL__ -DTR069_WIB -DTR143 -DTR111 -DTR196 -D__V4_2
#DEFS = -DVT100_COMPAT -DUSE_C99 -DCODE_DEBUG -D__ENABLE_SSL__ -DTR143 -DTR111 -DTR157 -DTR232 -DALIAS -DUSE_IPPING -DUSE_TRACEROUTE
DEFS = -DVT100_COMPAT -DUSE_C99 -DCODE_DEBUG -D__ENABLE_SSL__ -DTR143 -DTR111 -DTR157 -DALIAS -DUSE_IPPING -DUSE_TRACEROUTE -DASUSWRT
ifeq ($(RTCONFIG_TR181),y)
DEFS += -DTR181
else
DEFS += -DTR098
endif
#LIBS = -lssl -lpthread -lsqlite3
LIBS = -lssl -lpthread
LIBS += -L$(TOP)/nvram${BCMEX}$(EX7) -lnvram -L$(TOP)/shared -lshared -L$(TOP)/openssl -lcrypto
ifeq ($(HND_ROUTER),y)
LIBS += -L$(TOP)/wlcsm -lwlcsm
endif

ifeq ($(CONFIG_RALINK),y)
LIBS += -L$(TOP)/wireless_tools -liw
endif

#INCLUDES = -I$(HDRPATH) -I$(LINUXINCLUDE) -I$(SQLPATH)
INCLUDES = -I$(HDRPATH) -I$(LINUXINCLUDE) -I$(XMLPATH)
INCLUDES += -I$(TOP)/shared -I$(SRCBASE)/include -I$(TOP)/openssl/include -I$(TOP)/httpd

ifeq ($(CONFIG_RALINK),y)
INCLUDES += -I$(TOP)/wireless_tools
endif

ifeq ($(RTCONFIG_QTN),y)
CFLAGS += -I$(TOP)/libqcsapi_client  -I$(TOP)/shared/sysdeps/qtn
LDFLAGS += -L$(TOP)/libqcsapi_client -lqcsapi_client
endif

ifeq ($(RTCONFIG_QCA),y)
INCLUDES += -I$(TOP)/shared/sysdeps/qca -I$(TOP)/wireless_tools
LIBS += -L$(TOP)/wireless_tools -liw -ldl
endif

ifeq ($(RTCONFIG_DSL),y)
DEFS += -DRTCONFIG_XDSL
endif

#VPATH = $(SRCPATH):$(SQLPATH):$(LINUXPATH)/string:$(LINUXPATH)/math:$(LINUXPATH)/file:$(LINUXPATH)/socket:$(LINUXPATH)/time:$(LINUXPATH)/error:$(LINUXPATH)/log
VPATH = $(SRCPATH):$(XMLPATH):$(LINUXPATH)/string:$(LINUXPATH)/math:$(LINUXPATH)/file:$(LINUXPATH)/socket:$(LINUXPATH)/time:$(LINUXPATH)/error:$(LINUXPATH)/log:$(SYSDEPSPATH)

#SRCS=$(wildcard $(SRCPATH)/*.c) $(wildcard $(SQLPATH)/*.c) $(wildcard $(LINUXPATH)/*/*.c)
SRCS=$(wildcard $(SRCPATH)/*.c) $(wildcard $(XMLPATH)/*.c) $(wildcard $(LINUXPATH)/*/*.c)

ifeq ($(RTCONFIG_BCMARM),y)
INCLUDES += -I$(SRCBASE)/shared/bcmwifi/include
INCLUDES += -I$(SRCBASE)/common/include
endif

ifeq ($(CONFIG_RALINK),y)
SRCS += ralink.c
else
ifeq ($(RTCONFIG_BCMWL6),y)
ifeq ($(RTCONFIG_QTN),y)
SRCS += qtn.c
else
SRCS += broadcom6.c
endif
else
ifeq ($(RTCONFIG_QCA),y)
SRCS += qca.c
else
SRCS += broadcom.c
endif
endif
endif

HEADERS=$(wildcard $(HDRPATH)/*.h)
NOTDIRSRCS=$(notdir $(SRCS))
OBJS = $(patsubst %.c,$(OBJPATH)/%.o,$(NOTDIRSRCS))

all: tr

tr: $(OBJS)
	@mkdir -p $(BINPATH)
	$(CC) $(LDFLAGS) -o $(BINPATH)/$@ $^ $(LIBS)
	@echo Compile TR successful....

$(OBJS): $(OBJPATH)/%.o: %.c
	@mkdir -p $(OBJPATH)
	$(CC) $(CFLAGS) -c -o $@  $< $(INCLUDES) $(DEFS)

clean:
	rm -rf $(BINPATH)/* $(OBJPATH)/*
